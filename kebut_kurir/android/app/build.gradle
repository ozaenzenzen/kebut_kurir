def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.example.kebut_kurir"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.kebut_kurir"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            aaptOptions {
                ignoreAssetsPattern "mlkit_pose"
            }
        }
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def productFlavorsName = productFlavors.name.toString()
                def oldApkFlavorsName = productFlavorsName.replace("[", "").trim()
                def newApkFlavorsName = oldApkFlavorsName.replace("]", "").trim()
                // println("newApkFlavorsName=" + newApkFlavorsName)
                def project = "KebutKurir-"
                def SEP = "_"
                def buildType = variant.buildType.name
                def version = variant.versionName
                def date = new Date()
                def formattedDateWOHour = date.format('dd-MM-yy_HH-mm')
                def formattedDateWHour = date.format('dd-MM-yy')

                // def newApkName = project + version + SEP + buildType + SEP + formattedDateWHour + ".apk"
                def newApkName = project + version + SEP + newApkFlavorsName + SEP + formattedDateWHour + ".apk"
                outputFileName = new File(newApkName)
            }
        }
    }

    
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:32.0.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.android.gms:play-services-location:19.0.1'
}
